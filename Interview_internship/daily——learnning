os日常

1. 静态链接和动态链接的区别？
  答：静态链接，指把要调用的函数或者过程链接到可执行文件中，成为可执行文件的一部分
      动态链接，该DLL不必被包含在最终的EXE文件中，EXE文件执行时可以动态的引用和卸载这个与EXE独立的DLL文件
      原因：静态链接包含文件运行时所需的全部代码，当多个程序都调用相同的函数时，内存中就会出现多个该函数的拷贝，浪费宝贵的内存资源。
            而动态链接所调用的函数代码并没有被拷贝到应用程序的可执行文件中去，而是仅仅在其中加入了所调用函数的描述信息，往往是一些重定位信息，仅当运行时才装入内存使用。
            
2. 装载时动态链接与运行时动态链接？
  答：装载时动态链接，前提是在编译之前已经明确知道要调用DDL中的那几个函数，编译时只保留必要的链接信息，而不含DLL函数的代码，执行时再利用连接信息加载DLL
      运行时动态链接，指在编译之前并不知道将会调用那些DLL函数，完全是在运行的过程中，根据需求决定应该调用哪个函数，将其加载到内存中。并标识内存地址，其他程序也可以使用该程序。
      
3. 系统调用？
  答：又称系统呼叫，指运行在使用者空间的程序向操作系统内核请求需要更高权限运行的服务，系统调用提供了用户程序与操作系统之间的接口（用户程序和内核交互的接口）
      非为核心态和用户态，大多数系统交互式操作需求在内核态执行，如设备IO操作、进程间通信；特权指令：一类只能在核心态下运行的特殊指令。
      计算机资源是有限的，为了更好的管理这些资源，所有的资源都是由操作系统控制的，进程只能向操作系统请求这些资源，操作系统是这些资源的唯一入口，这个入口就是系统调用。

4. 用户态切换到内核态的方式？
  答：三种
      系统调用、异常（缺页异常）、外围设备的中断
